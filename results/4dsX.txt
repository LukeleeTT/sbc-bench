sbc-bench v0.9.9 StarFive VisionFive V2 (Tue, 18 Oct 2022 03:53:48 +0000)

Distributor ID:	Debian
Description:	Debian GNU/Linux bookworm/sid
Release:	unstable
Codename:	sid

/usr/bin/gcc (Debian 11.3.0-3) 11.3.0

Uptime: 03:53:51 up 20 min,  2 users,  load average: 0.64, 0.29, 0.18,  0Â°C

Linux 5.15.0-starfive (starfive) 	10/18/22 	_riscv64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           3.45    0.00    0.99    1.09    0.00   94.47

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1          13.12       323.88       705.04         0.00     406244     884324          0

               total        used        free      shared  buff/cache   available
Mem:           3.8Gi       197Mi       3.4Gi       4.0Mi       208Mi       3.6Gi
Swap:             0B          0B          0B

##########################################################################

Checking cpufreq OPP (sifive,u74-mc):

No cpufreq support available. Measured on cpu1: 1249 MHz (1249.084/1249.025/1248.995)

##########################################################################

Hardware sensors:

120e0000.tmon-isa-0000
temp1:        +63.6 C  

##########################################################################

Executing benchmark on cpu0 (sifive,u74-mc):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :    824.1 MB/s
 C copy backwards (32 byte blocks)                    :    823.2 MB/s (0.7%)
 C copy backwards (64 byte blocks)                    :    823.2 MB/s
 C copy                                               :    830.8 MB/s (0.2%)
 C copy prefetched (32 bytes step)                    :    829.3 MB/s
 C copy prefetched (64 bytes step)                    :    829.0 MB/s
 C 2-pass copy                                        :    598.5 MB/s
 C 2-pass copy prefetched (32 bytes step)             :    598.2 MB/s
 C 2-pass copy prefetched (64 bytes step)             :    598.5 MB/s
 C fill                                               :    786.5 MB/s
 C fill (shuffle within 16 byte blocks)               :    787.1 MB/s
 C fill (shuffle within 32 byte blocks)               :    787.7 MB/s
 C fill (shuffle within 64 byte blocks)               :    787.8 MB/s
 ---
 standard memcpy                                      :    827.1 MB/s (0.1%)
 standard memset                                      :    787.6 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    6.5 ns          /    12.6 ns 
    131072 :    9.7 ns          /    19.1 ns 
    262144 :   11.4 ns          /    22.4 ns 
    524288 :   17.6 ns          /    34.3 ns 
   1048576 :   19.8 ns          /    36.8 ns 
   2097152 :   32.6 ns          /    60.3 ns 
   4194304 :   90.2 ns          /   177.0 ns 
   8388608 :  129.4 ns          /   256.1 ns 
  16777216 :  152.2 ns          /   301.6 ns 
  33554432 :  166.3 ns          /   330.7 ns 
  67108864 :  177.3 ns          /   353.7 ns 

##########################################################################

Executing benchmark twice on cluster 0 (sifive,u74-mc)

OpenSSL 1.1.1f, built on 31 Mar 2020
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc       6559.80k     7260.93k     7516.50k     7579.99k     7602.18k     7602.18k
aes-128-cbc       6500.55k     7256.92k     7510.02k     7558.83k     7599.45k     7585.79k
aes-192-cbc       5694.41k     6252.97k     6444.89k     6492.50k     6498.99k     6498.99k
aes-192-cbc       5718.22k     6259.09k     6446.51k     6494.89k     6509.91k     6504.45k
aes-256-cbc       5001.78k     5475.18k     5634.13k     5670.91k     5685.25k     5679.79k
aes-256-cbc       5067.73k     5494.17k     5634.05k     5676.37k     5669.08k     5685.25k

##########################################################################

Executing benchmark single-threaded on cpu0 (sifive,u74-mc)

7-Zip (a) 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - - - 128000000 256000000 512000000 1024000000 -

RAM size:    3893 MB,  # CPU hardware threads:   4
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        798   100    777    777  |      14222   100   1215   1214
23:        765   100    780    780  |      13976   100   1211   1210
24:        741   100    798    797  |      13754   100   1208   1207
25:        714   100    817    816  |      13454   100   1198   1197
----------------------------------  | ------------------------------
Avr:             100    793    793  |              100   1208   1207
Tot:             100   1001   1000

##########################################################################

Executing benchmark 3 times multi-threaded on CPUs 0-3

7-Zip (a) 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: 64000000 64000000 64000000 64000000 128000000 - 512000000 - -

RAM size:    3893 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2328   327    693   2265  |      54895   395   1186   4683
23:       2284   336    693   2327  |      54663   400   1184   4730
24:       2246   344    703   2415  |      52870   394   1177   4641
25:       2155   343    719   2462  |      52295   399   1166   4654
----------------------------------  | ------------------------------
Avr:             337    702   2367  |              397   1178   4677
Tot:             367    940   3522

7-Zip (a) 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    3893 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2162   301    698   2103  |      55152   397   1187   4705
23:       2286   335    695   2329  |      54673   400   1184   4731
24:       2251   344    704   2421  |      53047   396   1177   4657
25:       1174   180    745   1341  |      52298   399   1166   4654
----------------------------------  | ------------------------------
Avr:             290    711   2049  |              398   1178   4687
Tot:             344    945   3368

7-Zip (a) 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: 64000000 64000000 - - 128000000 256000000 512000000 - -

RAM size:    3893 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2263   317    694   2202  |      55561   399   1188   4740
23:       2268   333    694   2311  |      54162   396   1183   4686
24:       2247   343    704   2416  |      53470   399   1176   4694
25:       2201   350    717   2514  |      52355   399   1167   4660
----------------------------------  | ------------------------------
Avr:             336    702   2361  |              398   1179   4695
Tot:             367    941   3528

Compression: 2367,2049,2361
Decompression: 4677,4687,4695
Total: 3522,3368,3528

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
04:10:14:   ---      3.81  96%   1%  95%   0%   0%   0%     0Â°C

Checking cpufreq OPP (sifive,u74-mc):

No cpufreq support available. Measured on cpu1: 1249 MHz (1249.113/1249.025/1248.966)

##########################################################################

Hardware sensors:

120e0000.tmon-isa-0000
temp1:        +64.9 C  

##########################################################################

System health while running tinymembench:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
03:53:55:   ---      0.67   5%   0%   3%   0%   1%   0%    --
03:54:35:   ---      0.88  25%   0%  25%   0%   0%   0%    --
03:55:15:   ---      1.00  25%   0%  24%   0%   0%   0%    --
03:55:55:   ---      1.00  25%   0%  25%   0%   0%   0%    --
03:56:35:   ---      1.04  25%   0%  25%   0%   0%   0%    --
03:57:15:   ---      1.08  25%   0%  25%   0%   0%   0%    --
03:57:55:   ---      1.04  25%   0%  24%   0%   0%   0%    --
03:58:35:   ---      1.06  25%   0%  25%   0%   0%   0%    --
03:59:15:   ---      1.10  25%   0%  25%   0%   0%   0%    --

System health while running OpenSSL benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
03:59:25:   ---      1.08   9%   0%   7%   0%   0%   0%    --
03:59:41:   ---      1.06  25%   0%  24%   0%   0%   0%    --
03:59:57:   ---      1.05  25%   0%  25%   0%   0%   0%    --
04:00:14:   ---      1.04  25%   0%  25%   0%   0%   0%    --
04:00:30:   ---      1.03  25%   0%  24%   0%   0%   0%    --
04:00:46:   ---      1.02  25%   0%  25%   0%   0%   0%    --
04:01:02:   ---      1.01  25%   0%  25%   0%   0%   0%    --

System health while running 7-zip single core benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
04:01:14:   ---      1.01  10%   0%   9%   0%   0%   0%    --
04:01:25:   ---      1.01  25%   0%  24%   0%   0%   0%    --
04:01:36:   ---      1.01  25%   0%  25%   0%   0%   0%    --
04:01:47:   ---      1.00  25%   0%  24%   0%   0%   0%    --
04:01:58:   ---      1.00  25%   0%  24%   0%   0%   0%    --
04:02:09:   ---      1.00  25%   0%  25%   0%   0%   0%    --
04:02:20:   ---      1.00  25%   0%  24%   0%   0%   0%    --
04:02:31:   ---      1.00  25%   0%  24%   0%   0%   0%    --
04:02:42:   ---      1.00  25%   0%  24%   0%   0%   0%    --
04:02:53:   ---      1.00  25%   0%  24%   0%   0%   0%    --
04:03:04:   ---      1.00  25%   0%  24%   0%   0%   0%    --
04:03:15:   ---      1.00  25%   0%  24%   0%   0%   0%    --
04:03:26:   ---      1.00  25%   0%  24%   0%   0%   0%    --
04:03:37:   ---      1.00  25%   0%  24%   0%   0%   0%    --

System health while running 7-zip multi core benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
04:03:45:   ---      1.00  11%   0%  10%   0%   0%   0%    --
04:04:10:   ---      1.90  89%   0%  88%   0%   0%   0%    --
04:04:33:   ---      2.45  92%   0%  92%   0%   0%   0%    --
04:04:58:   ---      2.98  90%   1%  89%   0%   0%   0%    --
04:05:22:   ---      3.06  82%   1%  80%   0%   0%   0%    --
04:05:46:   ---      3.59  95%   0%  94%   0%   0%   0%    --
04:06:11:   ---      3.79  87%   0%  86%   0%   0%   0%    --
04:06:35:   ---      3.92  93%   0%  92%   0%   0%   0%    --
04:07:00:   ---      3.95  90%   1%  89%   0%   0%   0%    --
04:07:23:   ---      3.55  52%   1%  50%   0%   0%   0%    --
04:07:46:   ---      3.15  44%   0%  43%   0%   0%   0%    --
04:08:12:   ---      3.27  70%   0%  69%   0%   0%   0%    --
04:08:37:   ---      3.57  88%   0%  87%   0%   0%   0%    --
04:09:02:   ---      3.78  94%   0%  93%   0%   0%   0%    --
04:09:27:   ---      4.04  89%   1%  87%   0%   0%   0%    --
04:09:51:   ---      3.82  85%   1%  83%   0%   0%   0%    --
04:10:14:   ---      3.81  96%   1%  95%   0%   0%   0%    --

##########################################################################

Linux 5.15.0-starfive (starfive) 	10/18/22 	_riscv64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          23.01    0.00    0.79    0.62    0.00   75.58

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1           7.76       183.92       398.74         0.00     412172     893592          0

               total        used        free      shared  buff/cache   available
Mem:           3.8Gi       198Mi       3.4Gi       4.0Mi       215Mi       3.6Gi
Swap:             0B          0B          0B

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0       -1        0       -      -     sifive,u74-mc
  1       -1        0       -      -     sifive,u74-mc
  2       -1        0       -      -     sifive,u74-mc
  3       -1        0       -      -     sifive,u74-mc

Architecture:        riscv64
Byte Order:          Little Endian
CPU(s):              4
On-line CPU(s) list: 0-3

SoC guess: StarFive JH7110
DT compat: starfive,visionfive-v2
           starfive,jh7110
 Compiler: /usr/bin/gcc (Debian 11.3.0-3) 11.3.0 / riscv64-linux-gnu
 Userland: riscv64
   Kernel: 5.15.0-starfive/riscv64
           CONFIG_HZ=100
           CONFIG_HZ_100=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_NONE=y

| StarFive VisionFive V2 | ~1250 MHz | 5.15 | Debian GNU/Linux bookworm/sid riscv64 | 3470 | 6530 | 5680 | 830 | 790 | - |