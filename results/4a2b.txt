sbc-bench v0.9.8 Khadas VIM1S (Fri, 09 Sep 2022 21:45:48 +0800)

Distributor ID:	Ubuntu
Description:	Ubuntu 22.04.1 LTS
Release:	22.04
Codename:	jammy

/usr/bin/gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0

Uptime: 21:45:49 up 4 min,  2 users,  load average: 2.87, 1.92, 0.87,  54.8Â°C

Linux 5.4.125 (Khadas) 	09/09/22 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          10.51    4.52    6.59    0.37    0.00   78.01

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0          67.25      2562.04      1294.03         0.00     716706     361992          0
zram1             1.07         4.26         0.01         0.00       1192          4          0
zram2             1.07         4.26         0.01         0.00       1192          4          0
zram3             1.07         4.26         0.01         0.00       1192          4          0
zram4             1.07         4.26         0.01         0.00       1192          4          0

               total        used        free      shared  buff/cache   available
Mem:           1.9Gi       499Mi       1.2Gi        21Mi       219Mi       1.4Gi
Swap:          994Mi          0B       994Mi

Filename				Type		Size		Used		Priority
/dev/zram1                              partition	254564		0		5
/dev/zram2                              partition	254564		0		5
/dev/zram3                              partition	254564		0		5
/dev/zram4                              partition	254564		0		5

##########################################################################

Checking cpufreq OPP (Cortex-A35):

Cpufreq OPP: 2004    Measured: 1991 (1991.959/1991.959/1991.767)
Cpufreq OPP: 1908    Measured: 1895 (1896.338/1895.903/1894.946)
Cpufreq OPP: 1800    Measured: 1787 (1789.068/1787.520/1786.631)
Cpufreq OPP: 1704    Measured: 1690 (1691.241/1691.025/1690.549)
Cpufreq OPP: 1608    Measured: 1596 (1596.532/1596.262/1596.108)
Cpufreq OPP: 1500    Measured: 1488 (1488.953/1488.752/1488.183)
Cpufreq OPP: 1404    Measured: 1392 (1393.164/1392.900/1392.255)
Cpufreq OPP: 1200    Measured: 1189 (1189.261/1189.101/1188.727)
Cpufreq OPP: 1000    Measured:  989    (991.448/988.945/988.552)     (-1.1%)
Cpufreq OPP:  666    Measured:  655    (655.684/655.636/655.541)     (-1.7%)
Cpufreq OPP:  500    Measured:  489    (489.857/489.348/489.105)     (-2.2%)
Cpufreq OPP:  250    Measured:  231    (237.235/229.832/228.239)     (-7.6%)
Cpufreq OPP:  100    Measured:   90       (91.253/90.669/89.727)    (-10.0%)

##########################################################################

Hardware sensors:

soc_thermal-virtual-0
temp1:        +53.9 C  (crit = +105.0 C)

##########################################################################

Executing benchmark on cpu0 (Cortex-A35):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1158.5 MB/s (0.6%)
 C copy backwards (32 byte blocks)                    :   1166.8 MB/s
 C copy backwards (64 byte blocks)                    :   1172.1 MB/s
 C copy                                               :   1172.3 MB/s
 C copy prefetched (32 bytes step)                    :   1201.0 MB/s
 C copy prefetched (64 bytes step)                    :   1201.4 MB/s
 C 2-pass copy                                        :   1061.2 MB/s (3.6%)
 C 2-pass copy prefetched (32 bytes step)             :   1245.3 MB/s (6.3%)
 C 2-pass copy prefetched (64 bytes step)             :   1247.5 MB/s (0.5%)
 C fill                                               :   4239.2 MB/s
 C fill (shuffle within 16 byte blocks)               :   4241.7 MB/s
 C fill (shuffle within 32 byte blocks)               :   4242.5 MB/s
 C fill (shuffle within 64 byte blocks)               :   4242.2 MB/s
 ---
 standard memcpy                                      :   1324.4 MB/s
 standard memset                                      :   4240.2 MB/s
 ---
 NEON LDP/STP copy                                    :   1320.1 MB/s
 NEON LDP/STP copy pldl2strm (32 bytes step)          :    934.2 MB/s
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1106.5 MB/s
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   1411.2 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   1409.9 MB/s
 NEON LD1/ST1 copy                                    :   1321.1 MB/s
 NEON STP fill                                        :   4244.0 MB/s (1.8%)
 NEON STNP fill                                       :   3992.7 MB/s (1.0%)
 ARM LDP/STP copy                                     :   1318.3 MB/s
 ARM STP fill                                         :   4241.3 MB/s
 ARM STNP fill                                        :   3987.8 MB/s (0.5%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON LDP/STP copy (from framebuffer)                 :   1299.3 MB/s (0.3%)
 NEON LDP/STP 2-pass copy (from framebuffer)          :   1174.1 MB/s
 NEON LD1/ST1 copy (from framebuffer)                 :   1298.8 MB/s
 NEON LD1/ST1 2-pass copy (from framebuffer)          :   1174.4 MB/s (0.4%)
 ARM LDP/STP copy (from framebuffer)                  :   1296.8 MB/s
 ARM LDP/STP 2-pass copy (from framebuffer)           :   1170.5 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    3.4 ns          /     5.5 ns 
    131072 :    5.2 ns          /     7.8 ns 
    262144 :    6.3 ns          /     8.5 ns 
    524288 :   20.6 ns          /    35.0 ns 
   1048576 :  102.3 ns          /   156.0 ns 
   2097152 :  150.1 ns          /   200.5 ns 
   4194304 :  177.0 ns          /   218.9 ns 
   8388608 :  191.5 ns          /   227.9 ns 
  16777216 :  205.1 ns          /   235.5 ns 
  33554432 :  222.7 ns          /   248.6 ns 
  67108864 :  254.6 ns          /   280.1 ns 

##########################################################################

Executing ramlat on cpu0 (Cortex-A35), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 2.020 2.020 1.515 1.516 1.515 1.516 2.118 4.260 
         8k: 2.020 2.023 1.514 1.516 1.517 1.517 2.114 4.266 
        16k: 2.024 2.022 1.518 1.517 1.517 1.519 2.119 4.266 
        32k: 4.465 5.897 4.148 5.632 4.148 5.696 8.419 15.41 
        64k: 10.86 11.89 10.58 11.63 10.53 11.69 17.97 34.62 
       128k: 13.14 13.81 13.10 13.38 13.12 13.43 19.84 39.71 
       256k: 39.78 34.99 39.30 33.24 35.65 35.31 55.66 120.6 
       512k: 202.2 179.4 193.9 179.3 194.3 182.7 234.5 394.3 
      1024k: 202.4 208.9 202.0 200.0 203.0 201.0 269.4 523.6 
      2048k: 205.2 203.7 205.5 202.9 202.9 194.9 253.5 540.0 
      4096k: 230.7 241.8 243.4 220.7 210.9 212.9 273.0 551.0 
      8192k: 214.3 215.3 214.5 214.6 214.0 216.2 279.2 554.3 
     16384k: 218.5 221.4 226.2 222.5 218.2 222.3 285.3 567.5 

##########################################################################

Executing benchmark twice on cluster 0 (Cortex-A35)

OpenSSL 3.0.2, built on 15 Mar 2022 (Library: OpenSSL 3.0.2 15 Mar 2022)
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     103344.86k   274752.13k   466580.99k   570360.15k   609228.12k   611991.55k
aes-128-cbc     103508.41k   275827.26k   467398.14k   570137.60k   608867.67k   611472.73k
aes-192-cbc      99564.04k   250903.85k   401919.32k   476571.99k   503627.78k   505413.63k
aes-192-cbc      98953.46k   249835.29k   401119.06k   475991.38k   503463.94k   505468.25k
aes-256-cbc      93873.75k   231523.75k   355095.30k   413101.74k   435169.96k   436660.91k
aes-256-cbc      93950.91k   232669.01k   357001.05k   414808.75k   435208.19k   436677.29k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A35)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    1988 MB,  # CPU hardware threads:   4
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        831    99    818    809  |      16540   100   1419   1412
23:        782    99    808    798  |      16177    99   1407   1400
24:        738    99    805    795  |      15794    99   1394   1387
25:        688    99    796    786  |      15371    99   1376   1368
----------------------------------  | ------------------------------
Avr:              99    807    797  |               99   1399   1392
Tot:              99   1103   1094

##########################################################################

Executing benchmark 3 times multi-threaded on CPUs 0-3

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - - - - - - - 2048000000

RAM size:    1988 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2382   348    667   2318  |      63316   393   1376   5402
23:       2304   357    658   2348  |      61684   391   1363   5337
24:       2241   368    656   2410  |      59870   390   1348   5256
25:       2140   373    655   2445  |      58082   389   1328   5169
----------------------------------  | ------------------------------
Avr:             361    659   2380  |              391   1354   5291
Tot:             376   1006   3836

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - 64000000 - - - - - -

RAM size:    1988 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2372   346    667   2308  |      63181   392   1376   5390
23:       2302   358    656   2346  |      61869   393   1364   5353
24:       2233   367    655   2402  |      59954   390   1349   5263
25:       2131   370    658   2434  |      58338   391   1327   5192
----------------------------------  | ------------------------------
Avr:             360    659   2372  |              391   1354   5300
Tot:             376   1006   3836

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    1988 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2383   347    668   2319  |      63025   391   1376   5377
23:       2308   358    657   2352  |      62001   393   1364   5365
24:       2230   365    657   2398  |      59481   387   1349   5222
25:       2151   374    656   2457  |      58463   392   1328   5203
----------------------------------  | ------------------------------
Avr:             361    659   2381  |              391   1354   5292
Tot:             376   1007   3837

Compression: 2380,2372,2381
Decompression: 5291,5300,5292
Total: 3836,3836,3837

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
22:05:02: 2004MHz  5.82  98%   1%  95%   0%   0%   1%  64.1Â°C

Checking cpufreq OPP (Cortex-A35):

Cpufreq OPP: 2004    Measured: 2000 (2000.349/2000.203/2000.106)

##########################################################################

Hardware sensors:

soc_thermal-virtual-0
temp1:        +59.4 C  (crit = +105.0 C)

##########################################################################

Thermal source: /sys/devices/virtual/thermal/thermal_zone0/ (soc_thermal)

System health while running tinymembench:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:46:36: 2004MHz  3.13  23%   5%  12%   3%   0%   0%  55.8Â°C
21:47:16: 2004MHz  3.07  27%   0%  25%   0%   0%   0%  58.6Â°C
21:47:57: 2004MHz  3.03  25%   0%  25%   0%   0%   0%  58.5Â°C
21:48:37: 2004MHz  3.06  26%   0%  25%   0%   0%   0%  57.7Â°C
21:49:17: 2004MHz  3.03  25%   0%  24%   0%   0%   0%  55.3Â°C
21:49:57: 2004MHz  3.01  25%   0%  24%   0%   0%   0%  54.4Â°C
21:50:37: 2004MHz  3.01  25%   0%  24%   0%   0%   0%  53.9Â°C
21:51:17: 2004MHz  3.00  25%   0%  24%   0%   0%   0%  53.6Â°C
21:51:57: 2004MHz  3.44  43%   0%  24%  17%   0%   0%  56.9Â°C
21:52:37: 2004MHz  3.72  50%   0%  24%  24%   0%   0%  57.6Â°C
21:53:17: 2004MHz  3.86  50%   2%  24%  22%   0%   0%  57.6Â°C
21:53:57: 2004MHz  4.05  50%   1%  24%  22%   0%   0%  57.7Â°C
21:54:37: 2004MHz  4.02  50%   1%  24%  22%   0%   0%  58.2Â°C

System health while running ramlat:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:54:40: 2004MHz  4.02  30%   2%  20%   7%   0%   0%  58.8Â°C
21:54:43: 2004MHz  4.02  51%   2%  24%  22%   0%   0%  58.6Â°C
21:54:46: 2004MHz  4.02  51%   2%  24%  23%   0%   0%  59.4Â°C
21:54:49: 2004MHz  4.02  51%   2%  24%  23%   0%   0%  60.3Â°C
21:54:52: 2004MHz  4.02  51%   2%  24%  22%   0%   0%  59.1Â°C
21:54:55: 2004MHz  4.02  51%   2%  24%  22%   0%   0%  58.6Â°C
21:54:58: 2004MHz  4.02  51%   2%  24%  23%   0%   0%  58.4Â°C
21:55:01: 2004MHz  4.02  50%   2%  25%  20%   1%   0%  58.6Â°C
21:55:04: 2004MHz  4.02  51%   2%  24%  22%   0%   0%  58.5Â°C

System health while running OpenSSL benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:55:06: 2004MHz  4.01  31%   2%  20%   7%   0%   0%  59.2Â°C
21:55:22: 2004MHz  3.86  37%   0%  25%  10%   0%   0%  55.7Â°C
21:55:39: 2004MHz  3.67  25%   0%  24%   0%   0%   0%  55.6Â°C
21:55:55: 2004MHz  3.52  25%   0%  24%   0%   0%   0%  54.7Â°C
21:56:11: 2004MHz  3.37  25%   0%  25%   0%   0%   0%  55.2Â°C
21:56:27: 2004MHz  3.29  25%   0%  25%   0%   0%   0%  54.7Â°C
21:56:43: 2004MHz  3.22  25%   0%  25%   0%   0%   0%  54.3Â°C

System health while running 7-zip single core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:56:55: 2004MHz  3.19  30%   2%  20%   6%   0%   0%  55.1Â°C
21:57:05: 2004MHz  3.16  25%   0%  24%   0%   0%   0%  54.7Â°C
21:57:15: 2004MHz  3.13  25%   0%  24%   0%   0%   0%  54.5Â°C
21:57:25: 2004MHz  3.11  25%   0%  24%   0%   0%   0%  54.5Â°C
21:57:35: 2004MHz  3.10  25%   0%  24%   0%   0%   0%  54.4Â°C
21:57:45: 2004MHz  3.08  25%   0%  24%   0%   0%   0%  54.5Â°C
21:57:55: 2004MHz  3.14  25%   0%  24%   0%   0%   0%  54.4Â°C
21:58:05: 2004MHz  3.11  25%   0%  24%   0%   0%   0%  54.4Â°C
21:58:15: 2004MHz  3.09  25%   0%  24%   0%   0%   0%  54.3Â°C
21:58:25: 2004MHz  3.08  25%   0%  24%   0%   0%   0%  54.4Â°C
21:58:35: 2004MHz  3.06  25%   0%  24%   0%   0%   0%  54.3Â°C
21:58:45: 2004MHz  3.05  25%   0%  24%   0%   0%   0%  54.3Â°C
21:58:56: 2004MHz  3.05  25%   0%  24%   0%   0%   0%  54.2Â°C
21:59:06: 2004MHz  3.04  25%   0%  24%   0%   0%   0%  54.3Â°C
21:59:16: 2004MHz  3.03  25%   0%  24%   0%   0%   0%  54.3Â°C

System health while running 7-zip multi core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:59:18: 2004MHz  3.03  30%   2%  21%   5%   0%   0%  54.5Â°C
21:59:42: 2004MHz  3.93  90%   0%  88%   0%   0%   1%  60.7Â°C
22:00:03: 2004MHz  4.70  93%   0%  91%   0%   0%   1%  58.4Â°C
22:00:27: 2004MHz  5.21  95%   1%  92%   0%   0%   1%  62.0Â°C
22:00:49: 2004MHz  5.50  90%   2%  87%   0%   0%   1%  62.5Â°C
22:01:13: 2004MHz  5.81  98%   2%  94%   0%   0%   1%  62.7Â°C
22:01:36: 2004MHz  5.67  93%   0%  91%   0%   0%   1%  62.9Â°C
22:01:57: 2004MHz  5.84  93%   1%  91%   0%   0%   1%  59.9Â°C
22:02:21: 2004MHz  6.04  95%   1%  92%   0%   0%   1%  63.2Â°C
22:02:43: 2004MHz  6.48  90%   2%  87%   0%   0%   1%  63.4Â°C
22:03:07: 2004MHz  6.21  96%   1%  93%   0%   0%   1%  63.6Â°C
22:03:31: 2004MHz  6.12  94%   0%  91%   0%   0%   1%  63.7Â°C
22:03:52: 2004MHz  6.14  93%   1%  91%   0%   0%   1%  60.8Â°C
22:04:16: 2004MHz  6.11  95%   1%  92%   0%   0%   1%  63.8Â°C
22:04:38: 2004MHz  6.06  90%   2%  87%   0%   0%   1%  64.1Â°C
22:05:02: 2004MHz  5.82  98%   1%  95%   0%   0%   1%  64.1Â°C

##########################################################################

dmesg output while running the benchmarks:

[  363.057224] [drm] Disabling plane 0, so skip postion calc
[  363.057249] [drm] Disabling plane 1, so skip postion calc
[  363.057267] [drm] Disabling video plane 0, so skip postion calc
[  363.057275] [drm] Disabling video plane 1, so skip postion calc
[  363.059370] [drm] [meson_hdmitx_encoder_atomic_disable]
[  363.166228] [drm] am_meson_crtc_atomic_disable:in
[  363.166352] vpu: vpu: vpu_dev_clk_gate_off: unsupport vpu mod: 35

##########################################################################

Linux 5.4.125 (Khadas) 	09/09/22 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          38.09    4.52    2.75    0.10    0.00   54.54

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0          15.65       641.55       329.12         0.00     921690     472840          0
zram1             0.21         0.83         0.00         0.00       1192          4          0
zram2             0.21         0.83         0.00         0.00       1192          4          0
zram3             0.21         0.83         0.00         0.00       1192          4          0
zram4             0.21         0.83         0.00         0.00       1192          4          0

               total        used        free      shared  buff/cache   available
Mem:           1.9Gi       497Mi       1.0Gi        21Mi       440Mi       1.4Gi
Swap:          994Mi          0B       994Mi

Filename				Type		Size		Used		Priority
/dev/zram1                              partition	254564		0		5
/dev/zram2                              partition	254564		0		5
/dev/zram3                              partition	254564		0		5
/dev/zram4                              partition	254564		0		5

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      100    2004   Cortex-A35 / r1p0
  1        0        0      100    2004   Cortex-A35 / r1p0
  2        0        0      100    2004   Cortex-A35 / r1p0
  3        0        0      100    2004   Cortex-A35 / r1p0

Architecture:                    aarch64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
CPU(s):                          4
On-line CPU(s) list:             0-3
Vendor ID:                       ARM
Model name:                      Cortex-A35
Model:                           0
Thread(s) per core:              1
Core(s) per cluster:             4
Socket(s):                       -
Cluster(s):                      1
Stepping:                        r1p0
CPU max MHz:                     2004.0000
CPU min MHz:                     100.0000
BogoMIPS:                        48.00
Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Spec store bypass: Not affected
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Not affected
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected

Signature: 00A35r1p000A35r1p000A35r1p000A35r1p0
DT compat: amlogic, s4
 Compiler: /usr/bin/gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0 / aarch64-linux-gnu
 Userland: arm64
   Kernel: 5.4.125/aarch64
           CONFIG_HZ=250
           CONFIG_HZ_250=y
           CONFIG_PREEMPTION=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_RCU=y
           raid6: neonx8   gen()  1282 MB/s
           raid6: neonx8   xor()  1146 MB/s
           raid6: neonx4   gen()  1253 MB/s
           raid6: neonx4   xor()  1128 MB/s
           raid6: neonx2   gen()  1012 MB/s
           raid6: neonx2   xor()   936 MB/s
           raid6: neonx1   gen()   701 MB/s
           raid6: neonx1   xor()   654 MB/s
           raid6: int64x8  gen()   882 MB/s
           raid6: int64x8  xor()   550 MB/s
           raid6: int64x4  gen()   819 MB/s
           raid6: int64x4  xor()   527 MB/s
           raid6: int64x2  gen()   630 MB/s
           raid6: int64x2  xor()   432 MB/s
           raid6: int64x1  gen()   412 MB/s
           raid6: int64x1  xor()   306 MB/s
           raid6: using algorithm neonx8 gen() 1282 MB/s
           raid6: .... xor() 1146 MB/s, rmw enabled
           raid6: using neon recovery algorithm
           xor: measuring software checksum speed
           xor: using function: arm64_neon (2597.000 MB/sec)

| Khadas VIM1S | 2004 MHz | 5.4 | Ubuntu 22.04.1 LTS arm64 | 3840 | 103430 | 436670 | 1320 | 4240 | - |